common.jdbc.clear=truncate table sbtest3
common.jdbc.insert.sql=insert into sbtest3 (k,c,pad) values (?,?,?)
common.jdbc.insert.values=Int:1,String:c,String:pad
common.ss.insert.sql=insert into sbtest (k,c,pad) values (?,?,?)
common.ss.insert.values=Int:1,String:c,String:pad
common.ss.clear=truncate table sbtest
jdbc.benchmark.fullrouting.encrypt.delete.sql=delete from sbtest3 where pad=?
jdbc.benchmark.fullrouting.encrypt.delete.values=String:abc
jdbc.benchmark.fullrouting.encrypt.update.sql=update sbtest3 set c=? where pad like ?
jdbc.benchmark.fullrouting.encrypt.update.values=String:c-update,String:pad%
jdbc.benchmark.fullrouting.encrypt.insert.sql=update sbtest3 set c=? where pad=?
jdbc.benchmark.fullrouting.encrypt.insert.values=String:update,String:abc
jdbc.benchmark.fullrouting.encrypt.select.sql=select count(*) from sbtest3
jdbc.benchmark.fullrouting.encrypt.select.values=
ss.benchmark.fullrouting.encrypt.delete.sql=delete from sbtest where pad=?
ss.benchmark.fullrouting.encrypt.delete.values=String:pad
ss.benchmark.fullrouting.encrypt.update.sql=update sbtest set c=? where pad like ?
ss.benchmark.fullrouting.encrypt.update.values=String:c-update,String:pad%
ss.benchmark.fullrouting.encrypt.select.sql=select count(*) from sbtest where pad like ?
ss.benchmark.fullrouting.encrypt.select.values=String:pad%
ss.benchmark.fullrouting.encrypt.insert.sql=insert into sbtest (k,c,pad) VALUES (?,?,?)
ss.benchmark.fullrouting.encrypt.insert.values=Int:1,String:c,String:pad
jdbc.benchmark.fullrouting.masterslave.delete.sql=delete from sbtest3 where c=?
jdbc.benchmark.fullrouting.masterslave.delete.values=String:abc
jdbc.benchmark.fullrouting.masterslave.update.sql=update sbtest3 set pad=? where c like ?
jdbc.benchmark.fullrouting.masterslave.update.values=String:pad-update,String:c%
jdbc.benchmark.fullrouting.masterslave.select.sql=select count(*) from sbtest3
jdbc.benchmark.fullrouting.masterslave.select.values=
ss.benchmark.fullrouting.masterslave.delete.sql=delete from sbtest where c=?
ss.benchmark.fullrouting.masterslave.delete.values=String:c2
ss.benchmark.fullrouting.masterslave.update.sql=update sbtest set pad=? where c like ?
ss.benchmark.fullrouting.masterslave.update.values=String:pad-update,String:c%
ss.benchmark.fullrouting.masterslave.select.sql=select count(*) from sbtest
ss.benchmark.fullrouting.masterslave.select.values=
jdbc.benchmark.fullrouting.sharding.delete.sql=delete from sbtest3 where c=?
jdbc.benchmark.fullrouting.sharding.delete.values=String:abc
jdbc.benchmark.fullrouting.sharding.update.sql=update sbtest3 set pad=? where c like ?
jdbc.benchmark.fullrouting.sharding.update.values=String:pad-update,String:c%
jdbc.benchmark.fullrouting.sharding.select.sql=select count(*) from sbtest3
jdbc.benchmark.fullrouting.sharding.select.values=
ss.benchmark.fullrouting.sharding.delete.sql=delete from sbtest where c=?
ss.benchmark.fullrouting.sharding.delete.values=String:c2
ss.benchmark.fullrouting.sharding.update.sql=update sbtest set pad=? where c like ?
ss.benchmark.fullrouting.sharding.update.values=String:pad-update,String:c%
ss.benchmark.fullrouting.sharding.select.sql=select count(*) from sbtest
ss.benchmark.fullrouting.sharding.select.values=
jdbc.benchmark.fullrouting.shardingmasterslaveencrypt.delete.sql=delete from sbtest3 where c=?
jdbc.benchmark.fullrouting.shardingmasterslaveencrypt.delete.values=String:abc
jdbc.benchmark.fullrouting.shardingmasterslaveencrypt.update.sql=update sbtest3 set pad=? where c like ?
jdbc.benchmark.fullrouting.shardingmasterslaveencrypt.update.values=String:pad-update,String:c%
jdbc.benchmark.fullrouting.shardingmasterslaveencrypt.select.sql=select count(*) from sbtest3
jdbc.benchmark.fullrouting.shardingmasterslaveencrypt.select.values=
ss.benchmark.fullrouting.shardingmasterslaveencrypt.delete.sql=delete from sbtest3 where c=?
ss.benchmark.fullrouting.shardingmasterslaveencrypt.delete.values=String:c2
ss.benchmark.fullrouting.shardingmasterslaveencrypt.update.sql=update sbtest set pad=? where c like ?
ss.benchmark.fullrouting.shardingmasterslaveencrypt.update.values=String:pad-update,String:c%
ss.benchmark.fullrouting.shardingmasterslaveencrypt.select.sql=select count(*) from sbtest
ss.benchmark.fullrouting.shardingmasterslaveencrypt.select.values=
jdbc.benchmark.rangerouting.encrypt.delete.sql=delete from sbtest3 where pad in(?,?,?)
jdbc.benchmark.rangerouting.encrypt.delete.values=String:pad1,String:pad2,String:pad3
jdbc.benchmark.rangerouting.encrypt.update.sql=update sbtest3 set c=? where pad in(?,?,?)
jdbc.benchmark.rangerouting.encrypt.update.values=String:c-update,String:pad1,String:pad2,String:pad3
jdbc.benchmark.rangerouting.encrypt.select.sql=select count(*) from sbtest3 where pad in(?,?,?)
jdbc.benchmark.rangerouting.encrypt.select.values=String:pad1,String:pad2,String:pad3
jdbc.benchmark.rangerouting.encrypt.insert.sql=insert into sbtest3 (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
jdbc.benchmark.rangerouting.encrypt.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
ss.benchmark.rangerouting.encrypt.delete.sql=delete from sbtest where pad in(?,?,?)
ss.benchmark.rangerouting.encrypt.delete.values=String:pad1,String:pad2,String:pad3
ss.benchmark.rangerouting.encrypt.update.sql=update sbtest set c=? where pad in(?,?,?)
ss.benchmark.rangerouting.encrypt.update.values=String:c-update,String:pad1,String:pad2,String:pad3
ss.benchmark.rangerouting.encrypt.insert.sql=insert into sbtest (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
ss.benchmark.rangerouting.encrypt.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
ss.benchmark.rangerouting.encrypt.select.sql=select count(*) from sbtest where pad in(?,?,?)
ss.benchmark.rangerouting.encrypt.select.values=String:pad1,String:pad2,String:pad3
jdbc.benchmark.rangerouting.masterslave.delete.sql=delete from sbtest3 where k in(?,?,?)
jdbc.benchmark.rangerouting.masterslave.delete.values=Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.masterslave.update.sql=update sbtest3 set c=?, pad=? where k in(?,?,?)
jdbc.benchmark.rangerouting.masterslave.update.values=String:c-update,String:pad-update,Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.masterslave.select.sql=select * from sbtest3 where k in (?,?,?)
jdbc.benchmark.rangerouting.masterslave.select.values=Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.masterslave.insert.sql=insert into sbtest3 (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
jdbc.benchmark.rangerouting.masterslave.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
ss.benchmark.rangerouting.masterslave.delete.sql=delete from sbtest where k in(?,?,?)
ss.benchmark.rangerouting.masterslave.delete.values=Int:1,Int:2,Int:3
ss.benchmark.rangerouting.masterslave.update.sql=update sbtest set c=?, pad=? where k in(?,?,?)
ss.benchmark.rangerouting.masterslave.update.values=String:c-update,String:pad-update,Int:1,Int:2,Int:3
ss.benchmark.rangerouting.masterslave.select.sql=select * from sbtest where k in (?,?,?)
ss.benchmark.rangerouting.masterslave.select.values=Int:1,Int:2,Int:3
ss.benchmark.rangerouting.masterslave.insert.sql=insert into sbtest (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
ss.benchmark.rangerouting.masterslave.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
jdbc.benchmark.rangerouting.sharding.delete.sql=delete from sbtest3 where k in(?,?,?)
jdbc.benchmark.rangerouting.sharding.delete.values=Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.sharding.update.sql=update sbtest3 set c=?, pad=? where k in(?,?,?)
jdbc.benchmark.rangerouting.sharding.update.values=String:c-update,String:pad-update,Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.sharding.select.sql=select * from sbtest3 where k in (?,?,?)
jdbc.benchmark.rangerouting.sharding.select.values=Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.sharding.insert.sql=insert into sbtest3 (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
jdbc.benchmark.rangerouting.sharding.insert.values=SInt:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
ss.benchmark.rangerouting.sharding.delete.sql=delete from sbtest where k in(?,?,?)
ss.benchmark.rangerouting.sharding.delete.values=Int:1,Int:2,Int:3
ss.benchmark.rangerouting.sharding.update.sql=update sbtest set c=?, pad=? where k in(?,?,?)
ss.benchmark.rangerouting.sharding.update.values=String:c-update,String:pad-update,Int:1,Int:2,Int:3
ss.benchmark.rangerouting.sharding.select.sql=select * from sbtest where k in (?,?,?)
ss.benchmark.rangerouting.sharding.select.values=Int:1,Int:2,Int:3
ss.benchmark.rangerouting.sharding.insert.sql=insert into sbtest (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
ss.benchmark.rangerouting.sharding.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.delete.sql=delete from sbtest3 where k in(?,?,?)
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.delete.values=Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.update.sql=update sbtest3 set c=?, pad=? where k in(?,?,?)
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.update.values=String:c-update,String:pad-update,Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.select.sql=select * from sbtest3 where k in (?,?,?)
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.select.values=Int:1,Int:2,Int:3
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.insert.sql=insert into sbtest3 (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
jdbc.benchmark.rangerouting.shardingmasterslaveencrypt.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
ss.benchmark.rangerouting.shardingmasterslaveencrypt.delete.sql=delete from sbtest where k in(?,?,?)
ss.benchmark.rangerouting.shardingmasterslaveencrypt.delete.values=Int:1,Int:2,Int:3
ss.benchmark.rangerouting.shardingmasterslaveencrypt.update.sql=update sbtest set c=?, pad=? where k in(?,?,?)
ss.benchmark.rangerouting.shardingmasterslaveencrypt.update.values=String:c-update,String:pad-update,Int:1,Int:2,Int:3
ss.benchmark.rangerouting.shardingmasterslaveencrypt.select.sql=select * from sbtest where k in (?,?,?)
ss.benchmark.rangerouting.shardingmasterslaveencrypt.select.values=Int:1,Int:2,Int:3
ss.benchmark.rangerouting.shardingmasterslaveencrypt.insert.sql=insert into sbtest (k,c,pad) values(?,?,?),(?,?,?),(?,?,?)
ss.benchmark.rangerouting.shardingmasterslaveencrypt.insert.values=Int:1,String:c1,String:pad1,Int:2,String:c2,String:pad2,Int:3,String:c3,String:pad3
jdbc.benchmark.singlerouting.encrypt.delete.sql=delete from sbtest3 where k=? and pad=?
jdbc.benchmark.singlerouting.encrypt.delete.values=Int:1,String:pad
jdbc.benchmark.singlerouting.encrypt.update.sql=update sbtest3 set c=? where k=? and pad=?
jdbc.benchmark.singlerouting.encrypt.update.values=String:c-update,Int:1,String:pad
jdbc.benchmark.singlerouting.encrypt.select.sql=select * from sbtest3 where k=? and pad=?
jdbc.benchmark.singlerouting.encrypt.select.values=Int:1,String:pad
jdbc.benchmark.singlerouting.encrypt.insert.sql=insert into sbtest3 (k,c,pad) VALUES (?,?,?)
jdbc.benchmark.singlerouting.encrypt.insert.values=Int:1,String:c,String:pad
ss.benchmark.singlerouting.encrypt.delete.sql=delete from sbtest where k=? and pad=?
ss.benchmark.singlerouting.encrypt.delete.values=Int:1,String:pad2
ss.benchmark.singlerouting.encrypt.update.sql=update sbtest set c=? where k=? and pad=?
ss.benchmark.singlerouting.encrypt.update.values=String:c-update,Int:1,String:pad
ss.benchmark.singlerouting.encrypt.insert.sql=insert into sbtest (k,c,pad) VALUES (?,?,?)
ss.benchmark.singlerouting.encrypt.insert.values=Int:1,String:c,String:pad
ss.benchmark.singlerouting.encrypt.select.sql=select * from sbtest where k=? and pad=?
ss.benchmark.singlerouting.encrypt.select.values=Int:1,String:pad
jdbc.benchmark.singlerouting.masterslave.delete.sql=delete from sbtest3 where k=?
jdbc.benchmark.singlerouting.masterslave.delete.values=Int:1
jdbc.benchmark.singlerouting.masterslave.update.sql=update sbtest3 set c=?, pad=? where k=?
jdbc.benchmark.singlerouting.masterslave.update.values=String:c-update,String:pad-update,Int:1
jdbc.benchmark.singlerouting.masterslave.select.sql=select k,c,pad from sbtest3 where k=?
jdbc.benchmark.singlerouting.masterslave.select.values=Int:1
jdbc.benchmark.singlerouting.masterslave.insert.sql=insert into sbtest3 (k,c,pad) values (?,?,?)
jdbc.benchmark.singlerouting.masterslave.insert.values=Int:1,String:c,String:pad
ss.benchmark.singlerouting.masterslave.delete.sql=delete from sbtest where k=?
ss.benchmark.singlerouting.masterslave.delete.values=Int:1
ss.benchmark.singlerouting.masterslave.update.sql=update sbtest set c=?, pad=? where k=?
ss.benchmark.singlerouting.masterslave.update.values=String:c-update,String:pad-update,Int:1
ss.benchmark.singlerouting.masterslave.select.sql=select k,c,pad from sbtest where k=?
ss.benchmark.singlerouting.masterslave.select.values=Int:1
ss.benchmark.singlerouting.masterslave.insert.sql=insert into sbtest (k,c,pad) values (?,?,?)
ss.benchmark.singlerouting.masterslave.insert.values=Int:1,String:c,String:pad
jdbc.benchmark.singlerouting.sharding.delete.sql=delete from sbtest3 where k=?
jdbc.benchmark.singlerouting.sharding.delete.values=Int:3
jdbc.benchmark.singlerouting.sharding.update.sql=update sbtest3 set c=?, pad=? where k=?
jdbc.benchmark.singlerouting.sharding.update.values=String:c-update,String:pad-update,Int:1
jdbc.benchmark.singlerouting.sharding.select.sql=select k,c,pad from sbtest3 where k=?
jdbc.benchmark.singlerouting.sharding.select.values=Int:1
jdbc.benchmark.singlerouting.sharding.insert.sql=insert into sbtest3 (k,c,pad) VALUES (?,?,?)
jdbc.benchmark.singlerouting.sharding.insert.values=Int:1,String:c,String:pad
ss.benchmark.singlerouting.sharding.delete.sql=delete from sbtest where k=?
ss.benchmark.singlerouting.sharding.delete.values=Int:1
ss.benchmark.singlerouting.sharding.update.sql=update sbtest set c=?, pad=? where k=?
ss.benchmark.singlerouting.sharding.update.values=String:c-update,String:pad-update,Int:1
ss.benchmark.singlerouting.sharding.select.sql=select k,c,pad from sbtest where k=?
ss.benchmark.singlerouting.sharding.select.values=Int:1
ss.benchmark.singlerouting.sharding.insert.sql=insert into sbtest (k,c,pad) VALUES (?,?,?)
ss.benchmark.singlerouting.sharding.insert.values=Int:1,String:c,String:pad
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.delete.sql=delete from sbtest3 where k=?
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.delete.values=Int:1
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.update.sql=update sbtest3 set c=?, pad=? where k=?
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.update.values=String:c-update,String:pad-update,Int:1
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.select.sql=select k,c,pad from sbtest3 where k=?
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.select.values=Int:1
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.insert.sql=insert into sbtest3 (k,c,pad) VALUES (?,?,?)
jdbc.benchmark.singlerouting.shardingmasterslaveencrypt.insert.values=Int:1,String:c,String:pad
ss.benchmark.singlerouting.shardingmasterslaveencrypt.delete.sql=delete from sbtest where k=?
ss.benchmark.singlerouting.shardingmasterslaveencrypt.delete.values=Int:1
ss.benchmark.singlerouting.shardingmasterslaveencrypt.update.sql=update sbtest set c=?, pad=? where k=?
ss.benchmark.singlerouting.shardingmasterslaveencrypt.update.values=String:c-update,String:pad-update,Int:1
ss.benchmark.singlerouting.shardingmasterslaveencrypt.select.sql=select k,c,pad from sbtest where k=?
ss.benchmark.singlerouting.shardingmasterslaveencrypt.select.values=Int:1
ss.benchmark.singlerouting.shardingmasterslaveencrypt.insert.sql=insert into sbtest (k,c,pad) VALUES (?,?,?)
ss.benchmark.singlerouting.shardingmasterslaveencrypt.insert.values=Int:1,String:c,String:pad
ss.benchmark.result.insert.sql=insert into benchmark_result(product,version,scenario,tps,total,TP50th,TP90th,TP95th,maxCost,minCost,sql) values(?,?,?,?,?,?,?,?,?,?,?)
